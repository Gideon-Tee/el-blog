pipeline {
    agent any
    
    environment {
        VERSION = '1.0'
        RELEASE_VERSION = 'R1.0'
    }

    stages {
        stage("Git checkout") {
            steps {
                script {
                    def gitCheckout = checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/Gideon-Tee/el-blog.git']]])
                }
            }
        }

        stage("Build stage") {
            environment {
                dockerImage = "el-blog"
                registry = "gideontee"
            }

            steps {
                sh '''
                    echo 'Building the image'
                    docker build -t $dockerImage .
                    echo 'Tagging the image'
                    docker tag $dockerImage $registry/$dockerImage
                    

                '''
            }
        }

        stage("Test stage") {
            steps {
                sh "echo 'In the test stage'"
            }
        }

        stage("Deploy stage") {
            environment {
                dockerImage = "el-blog"
                registry = "gideontee"
            }

            input {
                message "Do you want to deploy?"
                ok "Yes"
                steps {
                    sh "echo 'Deploying the image'"
                    sh "Pushing to docker hub"
                    sh "docker push $registry/$dockerImage"
                }
            }
            
        }
    }


    post {
        success {
            echo "Deploy was successful"
        }
        failure {
            echo "Deploy failed"
        }
        always {
            echo "Pipeline completed"
        }
    }
}